import { useState, useRef } from "react";
import { useDispatch } from "react-redux";
import { uploadImageToImgBB } from "../../utils/uploadImage";
import CustomButton from "../../components/CustomButton/CustomButton";
import CsvUpload from "../../components/CsvUpload/CsvUpload";
import AdminNewsEditor from "../../components/AdminNewsEditor/AdminNewsEditor";

import { collection, doc, getDoc, setDoc } from "firebase/firestore"; // ‚úÖ
import { db } from "../../utils/firebase"; // –Ω–µ –∑–∞–±—É–¥—å –∏–º–ø–æ—Ä—Ç

import styles from "./ProductForm.module.css";
import { useNavigate } from "react-router-dom";

const ProductForm = () => {
   const dispatch = useDispatch();
   const navigate = useNavigate();
   const fileInputRef = useRef(null);

   const newDocRef = doc(collection(db, "products")); // üîß —Å–æ–∑–¥–∞—ë–º —Å—Å—ã–ª–∫—É —Å –Ω–æ–≤—ã–º ID
   const [productData, setProductData] = useState({
      category: "",
      name: "",
      description: "",
      sku: "",
      price: "",
      images: [],
   });

   const [success, setSuccess] = useState(false);
   const [error, setError] = useState(null);

   const [formErrors, setFormErrors] = useState({
      category: false,
      name: false,
      description: false,
      price: false,
      images: false,
      sku: false,
   });

   const handleInputChange = (e) => {
      const { name, value } = e.target;
      setProductData((prev) => ({
         ...prev,
         [name]: value.replace(/^\s+/, ""),
      }));
   };

   const handleMultiImageUpload = async (e) => {
      const files = Array.from(e.target.files);
      if (files.length < 2 || files.length > 15) {
         setError("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Ç 2 –¥–æ 15 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.");
         return;
      }

      try {
         const urls = await Promise.all(files.map(uploadImageToImgBB));
         setProductData((prev) => ({
            ...prev,
            images: urls,
         }));
         setError(null);
      } catch (err) {
         console.error(err);
         setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π");
      }
   };

   const handleSubmit = async (e) => {
      const errors = {
         category: !productData.category.trim(), // –æ—à–∏–±–∫–∞ –µ—Å–ª–∏ –ø—É—Å—Ç–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
         name: !productData.name.trim(), // –æ—à–∏–±–∫–∞ –µ—Å–ª–∏ –ø—É—Å—Ç–æ–µ –∏–º—è
         description: !productData.description.trim(), // –æ—à–∏–±–∫–∞ –µ—Å–ª–∏ –ø—É—Å—Ç–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
         price: isNaN(productData.price) || productData.price <= 0, // –æ—à–∏–±–∫–∞ –µ—Å–ª–∏ —Ü–µ–Ω–∞ –Ω–µ —á–∏—Å–ª–æ –∏–ª–∏ <= 0
         images: productData.images.length < 2, // –æ—à–∏–±–∫–∞ –µ—Å–ª–∏ –º–µ–Ω—å—à–µ 2 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
         sku: !productData.sku.trim(), // –æ—à–∏–±–∫–∞ –µ—Å–ª–∏ –ø—É—Å—Ç–æ–π sku
      };

      setFormErrors(errors);

      if (Object.values(errors).includes(true)) {
         setError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.");
         return;
      }

      try {
         const docRef = doc(db, "products", productData.sku); // —Å–æ–∑–¥–∞—ë–º —Å—Å—ã–ª–∫—É —Å ID = sku
         const existing = await getDoc(docRef); // –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–æ–≤–∞—Ä

         if (existing.exists()) {
            setError("–¢–æ–≤–∞—Ä —Å —Ç–∞–∫–∏–º SKU —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.");
            return;
         }

         await setDoc(docRef, {
            //
            id: productData.sku, //—É–¥–∞–ª–∏—Ç—å
            //

            ...productData, // –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
            price: Number(productData.price), // —Ü–µ–Ω–∞ –≤ —á–∏—Å–ª–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
            rating: null, // —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            purchase: null, // –∑–∞–∫—É–ø–æ—á–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            discount: 0, // —Å–∫–∏–¥–∫–∞ 0 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            markup: 0, // –Ω–∞—Ü–µ–Ω–∫–∞ 0 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            stock: true, // –≤ –Ω–∞–ª–∏—á–∏–∏
            ordersCount: 0, // 0 –∑–∞–∫–∞–∑–æ–≤
            subcategory: "", // –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø—É—Å—Ç–∞—è
            mainImage: productData.images[0], // –≥–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Äî –ø–µ—Ä–≤–æ–µ
         });

         setSuccess(true);
         alert("–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω!");

         setProductData({
            category: "",
            name: "",
            description: "",
            price: "",
            images: [],
            sku: "",
         });

         if (fileInputRef.current) fileInputRef.current.value = ""; // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º input
      } catch (err) {
         console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:", err);
         setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞.");
      }
   };

   return (
      <>
         <h3 className={styles["product-form__title"]}>Admin room</h3>

         <div className={styles["product-form"]}>
            <form className={styles["form"]} onSubmit={handleSubmit}>
               <h4>
                  <u>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞</u>
               </h4>

               <div className={styles["form__field"]}>
                  <label className={styles["form__label"]}>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</label>
                  <select
                     className={`${styles["form__input"]} ${
                        formErrors.category ? styles["form__input--error"] : ""
                     }`}
                     name="category"
                     value={productData.category}
                     onChange={handleInputChange}
                  >
                     <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                     <option value="–ú–∞—à–∏–Ω—ã">–ú–∞—à–∏–Ω—ã</option>
                     <option value="–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã">–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã</option>
                     <option value="–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã">–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã</option>
                     <option value="–ù–æ—É—Ç–±—É–∫–∏">–ù–æ—É—Ç–±—É–∫–∏</option>
                     <option value="–ù–æ—Å–∫–∏">–ù–æ—Å–∫–∏</option>
                  </select>
               </div>

               <div className={styles["form__field"]}>
                  <label className={styles["form__label"]}>
                     –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:
                  </label>
                  <input
                     className={`${styles["form__input"]} ${
                        formErrors.name ? styles["form__input--error"] : ""
                     }`}
                     type="text"
                     name="name"
                     placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
                     value={productData.name}
                     onChange={handleInputChange}
                  />
               </div>

               <div className={styles["form__field"]}>
                  <label className={styles["form__label"]}>–û–ø–∏—Å–∞–Ω–∏–µ:</label>
                  <textarea
                     className={`${styles["form__input"]} ${
                        formErrors.description
                           ? styles["form__input--error"]
                           : ""
                     }`}
                     name="description"
                     placeholder="–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ (–Ω–µ –±–æ–ª–µ–µ 900 —Å–∏–º–≤–æ–ª–æ–≤)"
                     value={productData.description}
                     onChange={handleInputChange}
                     maxLength={900}
                  />
               </div>

               <div className={styles["form__field"]}>
                  <label className={styles["form__label"]}>
                     –ö–æ–¥ —Ç–æ–≤–∞—Ä–∞ / –ê—Ä—Ç–∏–∫—É–ª:
                  </label>
                  <input
                     className={`${styles["form__input"]} ${
                        formErrors.sku ? styles["form__input--error"] : ""
                     }`}
                     type="text"
                     name="sku"
                     placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ê—Ä—Ç. 1527-091"
                     value={productData.sku}
                     onChange={handleInputChange}
                  />
               </div>

               <div className={styles["form__field"]}>
                  <label className={styles["form__label"]}>–¶–µ–Ω–∞:</label>
                  <input
                     className={`${styles["form__input"]} ${
                        formErrors.price ? styles["form__input--error"] : ""
                     }`}
                     type="number"
                     name="price"
                     placeholder="–¶–µ–Ω–∞"
                     value={productData.price}
                     onChange={handleInputChange}
                  />
               </div>

               <div className={styles["form__field"]}>
                  <label className={styles["form__label"]}>
                     –ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Ç 2 –¥–æ 15 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:
                  </label>
                  <input
                     ref={fileInputRef}
                     className={`${styles["form__fileInput"]} ${
                        formErrors.images
                           ? styles["form__fileInput--error"]
                           : ""
                     }`}
                     type="file"
                     accept="image/*"
                     multiple
                     onChange={handleMultiImageUpload}
                  />
               </div>

               {productData.images.length > 0 && (
                  <div className={styles["form__image-preview-wrap"]}>
                     {productData.images.map((img, i) => (
                        <div key={i} className={styles["form__image-item"]}>
                           <img
                              src={img}
                              className={styles["form__image"]}
                              alt={`preview-${i}`}
                           />
                        </div>
                     ))}
                  </div>
               )}

               {error && <p className={styles["form__error"]}>{error}</p>}
               {success && (
                  <p className={styles["form__success"]}>
                     –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!
                  </p>
               )}

               <CustomButton
                  className={styles["form__add-product"]}
                  onClick={handleSubmit}
               >
                  –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
               </CustomButton>
            </form>

            <div className={styles["form__up-load-new"]}>
               <div className={styles["form__orders"]}>
                  <h4>
                     <u>–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤</u>
                  </h4>
                  <CustomButton
                     className={styles["form__go-to-orders"]}
                     onClick={() => navigate("/admin-orders")}
                  >
                     –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–æ–≤
                  </CustomButton>
               </div>

               <div className={styles["form__up-load"]}>
                  <h4>
                     <u>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ —Ç–∏–ø–æ–≤ .CSV</u>
                  </h4>
                  <div className={styles["form__up-load--component"]}>
                     <CsvUpload />
                  </div>
               </div>

               <div className={styles["form__new"]}>
                  <AdminNewsEditor />
               </div>
            </div>

            <div>
               <div className={styles["form__admin-products"]}>
                  <h4>
                     <u>
                        –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫–∞–º–∏ - —É–¥–∞–µ–ª–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, —Ä–µ–¥–∞–∫—Ç–æ—Ä
                        –æ—Ç–∑—ã–≤–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ü–∏–π –∏ —Ç–¥ . . .
                     </u>
                  </h4>
                  <CustomButton
                     className={styles["form__go-to-editor"]}
                     onClick={() => navigate("/admin-products")}
                  >
                     –ü–µ—Ä–µ–π—Ç–∏
                  </CustomButton>
               </div>
               {/* –ù–∞—Ü–µ–Ω–∫–∞ —Ç–æ–≤–∞—Ä–∞ */}
               <div className={styles["form__admin-products"]}>
                  <h4>
                     <u>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—Ü–µ–Ω–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä—ã (markup %)</u>
                  </h4>
                  <CustomButton
                     className={styles["form__go-to-editor"]}
                     onClick={() => navigate("/admin-markup")}
                  >
                     –ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞—Ü–µ–Ω–∫–µ
                  </CustomButton>
               </div>
            </div>
         </div>
      </>
   );
};

export default ProductForm;
