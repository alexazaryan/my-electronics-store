import { useEffect, useRef } from "react";
import useBodyOverflow from "../../hooks/useBodyOverflow";
import CustomButton from "../CustomButton/CustomButton";
import { useNavigate } from "react-router-dom";
import MenuRegistration from "../MenuRegistration/MenuRegistration";
import NewsSection from "../NewsSection/NewsSection";
import { useSelector, useDispatch } from "react-redux";
import CategoryList from "../CategoryList/CategoryList";
import { PiTelegramLogoDuotone } from "react-icons/pi";
import { LuNewspaper } from "react-icons/lu";
import { BiCategory } from "react-icons/bi";
import OrderHistory from "../OrderHistory/OrderHistory";
import SettingsPanel from "../SettingsPanel/SettingsPanel";
import FavoriteList from "../FavoriteList/FavoriteList";

import { FaRegHeart } from "react-icons/fa";

import {
   closeMenu,
   toggleRegistration,
   toggleNewsSection,
   toggleCategoryList,
   toggleSettingsPanel,
   toggleOrderHistory,
   toggleFavorites,
} from "../../store/menuSlice";

import {
   BsGlobe2,
   BsTencentQq,
   BsHeart,
   BsShop,
   BsBoxSeam,
   BsGear,
} from "react-icons/bs";

import styles from "./Menu.module.css";
import { markAllNewsAsViewed } from "../../store/newsSlice";

const Menu = () => {
   const favoriteCount = useSelector((state) => state.favorite.items.length); //–∏–∑–±—Ä–∞–Ω–Ω–æ–µ
   const newNewsCount = useSelector((state) => state.news.newNewsCount); //–∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π
   const user = useSelector((state) => state.auth.user);
   const isAdmin = useSelector((state) => state.auth.isAdmin);

   const {
      isMenuVisible,
      isRegistrationVisible,
      isNewsSectionVisible,
      isCategoryListVisible,
      isSettingsVisible,
      isOrderHistoryVisible,
      isFavoritesVisible,
   } = useSelector((state) => state.menu);

   const dispatch = useDispatch();
   const navigate = useNavigate();

   const favoritesRef = useRef(null);
   const menuRef = useRef(null);
   const registrationRef = useRef(null);
   const categoryListRef = useRef(null);
   const newsSectionRef = useRef(null);
   const settingsPanelRef = useRef(null);
   const orderHistoryRef = useRef(null);

   useBodyOverflow(isMenuVisible);

   const handleClickOutside = (event) => {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞, –±—ã–ª –ª–∏ –∫–ª–∏–∫ –≤–Ω—É—Ç—Ä–∏ –ª—é–±–æ–≥–æ –∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      if (
         menuRef.current?.contains(event.target) ||
         registrationRef.current?.contains(event.target) ||
         categoryListRef.current?.contains(event.target) ||
         newsSectionRef.current?.contains(event.target) ||
         settingsPanelRef.current?.contains(event.target) ||
         orderHistoryRef.current?.contains(event.target) ||
         favoritesRef.current?.contains(event.target)
      ) {
         return; // –ï—Å–ª–∏ –∫–ª–∏–∫ –≤–Ω—É—Ç—Ä–∏, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
      }

      // –ó–∞–∫—Ä—ã–≤–∞–µ–º **—Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ—Ç–∫—Ä—ã—Ç–æ–µ –æ–∫–Ω–æ**
      // –≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–æ—á–µ–≤–∏–¥–Ω—ã–º –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.
      // –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã–≤–∞–ª–∏—Å—å –≤—Å–µ –æ–∫–Ω–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ, –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É.
      if (isFavoritesVisible) {
         dispatch(toggleFavorites(false));
      } else if (isOrderHistoryVisible) {
         dispatch(toggleOrderHistory(false));
      } else if (isSettingsVisible) {
         dispatch(toggleSettingsPanel(false));
      } else if (isCategoryListVisible) {
         dispatch(toggleCategoryList(false));
      } else if (isNewsSectionVisible) {
         dispatch(toggleNewsSection(false));
      } else if (isRegistrationVisible) {
         dispatch(toggleRegistration(false));
      } else if (isMenuVisible) {
         dispatch(closeMenu());
      }
   };

   useEffect(() => {
      // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      document.addEventListener("mousedown", handleClickOutside);
      return () => {
         // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
         document.removeEventListener("mousedown", handleClickOutside);
      };
   }, [
      isMenuVisible,
      isRegistrationVisible,
      isNewsSectionVisible,
      isCategoryListVisible,
      isSettingsVisible,
      isOrderHistoryVisible,
      isFavoritesVisible,
   ]);

   const openTelegram = () => {
      window.open("https://t.me/Student_JS", "_blank");
   };

   return (
      <div className={styles["menu__wrap"]}>
         <div
            ref={menuRef}
            className={`${styles["menu"]} ${
               isMenuVisible ? styles["visible"] : ""
            }`}
         >
            <CustomButton
               className={styles["menu__custom-button-close"]}
               accordion
               onClick={() => dispatch(closeMenu())}
            >
               ‚úñ –∑–∞–∫—Ä—ã—Ç—å
            </CustomButton>
            <div className={styles["menu__collection"]}>
               {user ? (
                  <p>–ü—Ä–∏–≤–µ—Ç, {user.name || "–∫–∞–∫ —Ç—ã"}! üéâüéâüéâ</p>
               ) : (
                  <p>–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω—ã</p>
               )}
               <CustomButton
                  className={styles.customButtonMenu}
                  onClick={() => dispatch(toggleRegistration())}
               >
                  {user ? "–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ" : "–í–æ–π—Ç–∏ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"}
               </CustomButton>

               {/* –≤—ã–±–æ—Ä —è–∑—ã–∫–∞ */}
               <div className={styles["menu-language"]}>
                  <BsGlobe2 className={styles["globe-icon"]} />
                  <div>
                     <p className={styles["language-text"]}>–†—É—Å—Å–∫–∏–π</p>
                  </div>
               </div>

               {/* –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */}
               {isAdmin && (
                  <div
                     className={styles["admin-panel"]}
                     onClick={() => {
                        navigate("/product-form");
                        dispatch(closeMenu());
                     }}
                  >
                     <BsTencentQq className={styles["admin-icon"]} />
                     <div>
                        <p className={styles["admin-text"]}>
                           –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                        </p>
                     </div>
                  </div>
               )}

               {/* –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
               <div
                  className={styles["category-panel"]}
                  onClick={() => dispatch(toggleCategoryList())}
               >
                  <BiCategory className={styles["category-icon"]} />
                  <div>
                     <p className={styles["category-text"]}>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</p>
                  </div>
               </div>

               {/* –¢–µ–ª–ª–µ–≥—Ä–∞–º */}
               <div className={styles["telegram-panel"]} onClick={openTelegram}>
                  <PiTelegramLogoDuotone className={styles["telegram-icon"]} />
                  <div>
                     <p className={styles["telegram-text"]}>Telegram</p>
                  </div>
               </div>

               {/* –∏–∑–±—Ä–∞–Ω–Ω–æ–µ */}
               <div
                  className={styles["favorites-panel"]}
                  onClick={() => dispatch(toggleFavorites())}
               >
                  <FaRegHeart className={styles["favorites-icon"]} />
                  <div className={styles["favorites-panel__box"]}>
                     <p className={styles["favorites-text"]}>–∏–∑–±—Ä–∞–Ω–Ω–æ–µ</p>
                     {favoriteCount > 0 && (
                        <span className={styles["favorites-count"]}>
                           {favoriteCount}
                        </span>
                     )}
                  </div>
               </div>

               {/* –°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –º–∞–≥–∞–∑–∏–Ω */}
               <div className={styles["shop-panel"]}>
                  <BsShop className={styles["shop-icon"]} />
                  <div>
                     <p className={styles["shop-text"]}>–°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –º–∞–≥–∞–∑–∏–Ω</p>
                  </div>
                  <p className={styles["shop-soon"]}>soon</p>
               </div>

               {/* –ú–æ–∏ –∑–∞–∫–∞–∑—ã */}
               <div
                  className={styles["orders-panel"]}
                  onClick={() => dispatch(toggleOrderHistory())}
               >
                  <BsBoxSeam className={styles["orders-icon"]} />
                  <div>
                     <p className={styles["orders-text"]}>–ú–æ–∏ –∑–∞–∫–∞–∑—ã</p>
                  </div>
               </div>

               {/* –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
               <div
                  className={styles["settings-panel"]}
                  onClick={() => dispatch(toggleSettingsPanel())}
               >
                  <BsGear className={styles["settings-icon"]} />
                  <div>
                     <p className={styles["settings-text"]}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</p>
                  </div>
               </div>

               {/* –Ω–æ–≤–æ—Å—Ç–∏ */}
               <div
                  className={styles["news-panel"]}
                  onClick={() => {
                     dispatch(toggleNewsSection()); // –æ—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å –Ω–æ–≤–æ—Å—Ç–∏
                     dispatch(markAllNewsAsViewed()); // –ø–æ–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ
                  }}
               >
                  <LuNewspaper className={styles["news-icon"]} />
                  <div className={styles["news-text-wrapper"]}>
                     <p className={styles["news-text"]}>–ù–æ–≤–æ—Å—Ç–∏</p>

                     {newNewsCount > 0 && (
                        <span className={styles["news-count"]}>
                           {newNewsCount}
                        </span>
                     )}
                  </div>
               </div>
            </div>
         </div>

         {/* —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è */}
         <MenuRegistration
            isVisible={isRegistrationVisible}
            ref={registrationRef}
         />

         {/* –∏–∑–±—Ä–∞–Ω–Ω–æ–µ */}
         <FavoriteList isVisible={isFavoritesVisible} ref={favoritesRef} />

         {/* –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
         <CategoryList
            isVisible={isCategoryListVisible}
            ref={categoryListRef}
         />

         {/* –Ω–æ–≤–æ—Å—Ç–∏ */}
         <NewsSection isVisible={isNewsSectionVisible} ref={newsSectionRef} />

         {/* –∏—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ */}
         <OrderHistory
            isVisible={isOrderHistoryVisible}
            ref={orderHistoryRef}
         />

         {/* –Ω–∞—á—Ç—Ä–æ–π–∫–∏ */}
         <SettingsPanel isVisible={isSettingsVisible} ref={settingsPanelRef} />

         {/* –û–≤–µ—Ä–ª–µ–π */}
         <div
            className={`${styles["overlay"]} ${
               isMenuVisible ||
               isRegistrationVisible ||
               isNewsSectionVisible ||
               isSettingsVisible ||
               isOrderHistoryVisible
                  ? styles["active"]
                  : ""
            }`}
         />
      </div>
   );
};

export default Menu;
